module ones_count(count, dat_in);
output reg [3:0] count;
input [7:0] dat_in;
/*reg [3:0] cnt;
reg [3:0] i;

always @ (*)
begin 
  cnt <= 4'b0;
  for (i=0; i<8; i=i+1)
  begin
    if (dat_in[i]) 
    begin
       cnt <= cnt + 1'b1;
    end
  end
end

assign count = cnt;

reg [7:0] tmp;

tmp = dat_in;
while (dat_in)
begin
  tmp <= dat_in - 1'b1;
  dat_in <= dat_in & tmp;
  count <= count + 1'b1;
end*/
wire [27:0] cnt;
generate
genvar i;
for (i=0;i<7;i=i+1) begin:get_1_num
  if(i==0) assign cnt[4*(i+1)-1 -: 4] = dat_in[i]+dat_in[i+1];
  else assign cnt[4*(i+1)-1 -: 4] = cnt[4*(i)-1 -: 4]+dat_in[i+1];
end
endgenerate
always @ (*) begin
  count = cnt[27 -: 4];
end

endmodule
